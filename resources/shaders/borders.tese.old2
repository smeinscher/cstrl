#version 460 core

layout(quads, fractional_even_spacing) in;

uniform mat4 view;
uniform mat4 projection;

in vec4 color_tese[];
out vec4 color;

vec3 bezier(vec3 p0, vec3 p1, vec3 p2, vec3 p3, float t)
{
    float u = 1.0 - t;
    return u * u * u * p0 +
        3.0 * u * u * t * p1 +
        3.0 * u * t * t * p2 +
        t * t * t * p3;
}

void main()
{
    float curve_factor = -0.25;

    float u = gl_TessCoord.x;
    float v = gl_TessCoord.y;

    vec3 curve0 = bezier(gl_in[0].gl_Position.xyz, gl_in[1].gl_Position.xyz, gl_in[2].gl_Position.xyz, gl_in[3].gl_Position.xyz, u);
    vec3 curve1 = bezier(gl_in[4].gl_Position.xyz, gl_in[5].gl_Position.xyz, gl_in[6].gl_Position.xyz, gl_in[7].gl_Position.xyz, u);
    vec3 curve2 = bezier(gl_in[8].gl_Position.xyz, gl_in[9].gl_Position.xyz, gl_in[10].gl_Position.xyz, gl_in[11].gl_Position.xyz, u);
    vec3 curve3 = bezier(gl_in[12].gl_Position.xyz, gl_in[13].gl_Position.xyz, gl_in[14].gl_Position.xyz, gl_in[15].gl_Position.xyz, u);

    vec3 position = bezier(curve0, curve1, curve2, curve3, v);

    float r = length(gl_TessCoord.xy - vec2(0.5)) * 2.0;
    //position.z += curve_factor * (0.5 - r * r);
    position = normalize(position);
    gl_Position = projection * view * vec4(position, 1.0);
    color = mix(mix(color_tese[0], color_tese[1], u), mix(color_tese[2], color_tese[3], u), v);
}
